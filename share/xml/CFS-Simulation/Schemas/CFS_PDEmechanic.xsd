<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://www.cfs++.org/simulation"
  xmlns="http://www.cfs++.org/simulation"
  xmlns:cfs="http://www.cfs++.org/simulation"
  elementFormDefault="qualified">

  <xsd:annotation>
    <xsd:documentation xml:lang="en">
      Coupled Field Solver project CFS++
      Schema for PDE description for a mechanic PDE
    </xsd:documentation>
  </xsd:annotation>


  <!-- ******************************************************************* -->
  <!--   Definition of element for mechanic PDEs -->
  <!-- ******************************************************************* -->
  <xsd:element name="mechanic" type="DT_PDEMechanic" substitutionGroup="PDEBasic">
    <xsd:annotation>
      <xsd:documentation>PDE for structural mechanics</xsd:documentation>
    </xsd:annotation>
    <xsd:unique name="CS_MechanicRegion">
      <xsd:selector xpath="cfs:region"/>
      <xsd:field xpath="@name"/>
    </xsd:unique>
  </xsd:element>


  <!-- ******************************************************************* -->
  <!--   Definition of data type for mechanic PDEs -->
  <!-- ******************************************************************* -->

  <xsd:complexType name="DT_PDEMechanic">
    <xsd:complexContent>
      <xsd:extension base="DT_PDEBasic">

        <xsd:sequence>

          <!-- Regions the PDE lives on -->
          <xsd:element name="regionList" minOccurs="1" maxOccurs="1">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="region" minOccurs="1" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:attribute name="polyId" type="xsd:string" use="optional" default="default"/>
                    <xsd:attribute name="integId" type="xsd:string" use="optional" default="default"/>
                    <xsd:attribute name="name" type="xsd:token" use="required"/>
                    <xsd:attribute name="nonLinIds" type="xsd:token" use="optional" default=""/>
                    <xsd:attribute name="dampingId" type="xsd:token" use="optional" default=""/>
                    <xsd:attribute name="softeningId" type="xsd:token" use="optional" default=""/>
                    <xsd:attribute name="reducedInt" type="DT_CFSBool" use="optional" default="no"/>
                    <xsd:attribute name="thickness" type="DT_NonNegFloat" use="optional"
                      default="0.0"/>
                    <xsd:attribute name="penaltyDof" type="DT_NonNegFloat" use="optional"
                      default="0.0"/>
                    <xsd:attribute name="complexMaterial" type="DT_CFSBool" use="optional"
                      default="no"/>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>

          <!-- Non-conforming interfaces of the PDE -->
          <xsd:element name="ncInterfaceList" type="DT_NcInterfaceList" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Defines non-conforming interfaces</xsd:documentation>
            </xsd:annotation>
          </xsd:element>

          <!-- List defining nonlinear types -->
          <xsd:element name="nonLinList" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Currently not available</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:choice maxOccurs="unbounded">
                <xsd:element name="geometric" type="DT_MechNonLinGeo"/>
                <xsd:element name="material" type="DT_MechNonLinMat"/>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>

          <!-- List defining damping types -->
          <xsd:element name="dampingList" minOccurs="0" maxOccurs="1">
            <xsd:complexType>
              <xsd:choice maxOccurs="unbounded">
                <xsd:element name="rayleigh" type="DT_MechDampingRayl">
                  <xsd:annotation>
                    <xsd:documentation>Defines Rayleigh damping (parameters have to be specified in material-xml-file)</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="pml" type="DT_DampingPML">
                  <xsd:annotation>
                    <xsd:documentation>Perefectly Matched Layer (PML); just working in frequency domain!</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="mapping" type="DT_DampingMapping">
                  <xsd:annotation>
                    <xsd:documentation>Allows region to be a Mapping layer.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>

          <!-- List defining softening types -->
          <xsd:element name="softeningList" minOccurs="0" maxOccurs="1">
            <xsd:complexType>
              <xsd:choice maxOccurs="unbounded">
                <xsd:element name="icModesTW" type="DT_MechSofteningIcModes">
                  <xsd:annotation>
                    <xsd:documentation>Switches on the softening according to Taylor-Wilson (just useful, when using linear basis functions)</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>

          <!-- Initial conditions (optional) -->
          <xsd:element name="initialValues" minOccurs="0" maxOccurs="1">
            <xsd:complexType>
              <xsd:choice maxOccurs="unbounded">

                <!-- Initial state of previous sequence step / external file -->
                <xsd:element name="initialState" type="DT_InitialState" minOccurs="0" maxOccurs="1"/>

              </xsd:choice>
            </xsd:complexType>
          </xsd:element>

          <!-- Boundary Conditions & Loads (optional) -->
          <xsd:element name="bcsAndLoads" minOccurs="0" maxOccurs="1">
            <xsd:complexType>

              <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <!-- Dirichlet Boundary Conditions -->

                <xsd:element name="fix"          type="DT_BcHomVector"   />
                <xsd:element name="displacement" type="DT_BcInhomVector" />
                <xsd:element name="velocity" type="DT_BcInhomVector" />
                <xsd:element name="acceleration" type="DT_BcInhomVector" />
                
                <!-- RHS Load Values-->
                <xsd:element name="stress" type="DT_BcInhomTensor"/>
                <xsd:element name="strain" type="DT_BcInhomTensor"/>
                <xsd:element name="traction" type="DT_BcInhomVector"/>
                <xsd:element name="pressure" type="DT_BcInhomScalar"/>
                <xsd:element name="force" type="DT_BcInhomVector"/>
                <xsd:element name="forceDensity" type="DT_BcInhomVector"/>
                <xsd:element name="rhsValues" type="DT_BcInhomVector"/>
                <!-- for iterative coupling to magnetostrictive material -->
                <xsd:element name="magFluxDensity"      type="DT_BcInhomVector"    />

                <!-- RHS, due to thermal strains-->
                <xsd:element name="thermalStrain" type="DT_BcInhomScalar"/>
                <!-- RHS, due to (piezo-)electric strains-->
                <xsd:element name="elecStrain" type="DT_elecStrain"/>
                
              	<!-- Special Boundary Conditions -->
                <xsd:element name="constraint" type="DT_MechCS"/>
                <!-- Models a node attached to a spring. The given value is the spring constant in N/m which is added directly to the appropriate stiffness matrix entry. example: testsuite Optimization/Static/output-->
                <xsd:element name="concentratedElem" type="DT_MechConcElem"/>
                <xsd:element name="preStress" type="DT_MechPreStress"/>
                <!-- Reference Loading, for e.g. buckling-->
                <xsd:element name="referenceLoad" type="DT_ReferenceLoad"/>
                <!-- Stiffness at surface -->
                <xsd:element name="normalStiffness" type="DT_BcInhomScalar">
                  <xsd:annotation>
                    <xsd:documentation>Defines a stiffness in normal-direction of the boundary.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <!-- Damping at surface -->
                <xsd:element name="normalDamping" type="DT_BcInhomScalar">
                  <xsd:annotation>
                    <xsd:documentation>Defines a normal traction on the surface proportional to k * normal velovity, i.e.
                      the 'value' k defines a damping konstant per area in normal-direction of the boundary.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <!-- Damping at surface -->
                <xsd:element name="normalMass" type="DT_BcInhomScalar">
                  <xsd:annotation>
                    <xsd:documentation>Defines a normal traction on the surface proportional to k * normal acceleration, 
                      i.e. the scalar 'value' k specifies a mass per area acting in normal-direction.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>

                <!-- the test strain is for mathematical homogenization. -->
                <xsd:element name="testStrain"    type="DT_MechTestStrain"/>
                <xsd:element name="periodic" type="DT_BcPeriodic"/>
                <xsd:element name="absorbingBCs" type="DT_AbsorbingBC"/>
                <!-- Bloch periodic Boundary Conditions applied to full displacement vector -->
                <xsd:element name="blochPeriodic" type="DT_BcBlochPeriodicFull" form="qualified"/>
              </xsd:choice>

            </xsd:complexType>

            <!-- Experimental: Side constraints on BCs -->
            <xsd:unique name="CS_MechanicBCs">
              <xsd:selector
                xpath="cfs:dirichletHom|cfs:dirichletInhom|cfs:dirichletFileInhom|cfs:neumannInhom"/>
              <xsd:field xpath="@name"/>
              <xsd:field xpath="@dof"/>
            </xsd:unique>
          </xsd:element>

          <!-- Desired solution values (optional) -->
          <xsd:element name="storeResults" type="DT_MechStoreResults" minOccurs="0" maxOccurs="1"/>

        </xsd:sequence>

        <xsd:attribute name="timeStepAlpha" use="optional" default="0.0" type="xsd:double">
          <xsd:annotation>
            <xsd:documentation>Allows to use and define alpha-time stepping method (HHT); extension of Newmark; here you define the alpha-value!</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        
        <!-- Subtype of PDE -->
        <xsd:attribute name="subType" use="optional" default="planeStrain">
          <xsd:simpleType>
            <xsd:restriction base="xsd:token">
              <xsd:enumeration value="planeStrain"/>
              <xsd:enumeration value="planeStress"/>
              <xsd:enumeration value="flatShell"/>
              <xsd:enumeration value="3d"/>
              <xsd:enumeration value="2.5d"/> <!-- 3d vector dependent on two spacial coordinates -->
              <xsd:enumeration value="axi"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        
        <!-- switch between effective mass and stiffness formulation -->
        <xsd:attribute name="effectiveMass" type="DT_CFSBool" use="optional" default="no"/>
        
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <!-- ******************************************************************* -->
  <!--   Definition of geometric nonlienarity -->
  <!-- ******************************************************************* -->

  <!-- Definition of geometric nonlinearity type -->
  <xsd:complexType name="DT_MechNonLinGeo">
    <xsd:complexContent>
      <xsd:extension base="DT_NonLinBasic"> </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition of material nonlienarity -->
  <!-- ******************************************************************* -->

  <!-- Definition of geometric nonlinearity type -->
  <xsd:complexType name="DT_MechNonLinMat">
    <xsd:complexContent>
      <xsd:extension base="DT_NonLinBasic"> </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition of rayleigh damping -->
  <!-- ******************************************************************* -->

  <!-- Definition of rayleigh damping type -->
  <xsd:complexType name="DT_MechDampingRayl">
    <xsd:complexContent>
      <xsd:extension base="DT_DampingBasic">
        <xsd:sequence>
          <xsd:element name="adjustDamping" type="DT_CFSBool" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="freq" type="DT_NonNegFloat" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ratioDeltaF" type="DT_NonNegFloat" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition of fractional damping -->
  <!-- ******************************************************************* -->

  <!-- Definition of fractional damping type -->
  <xsd:complexType name="DT_MechDampingFrac">
    <xsd:complexContent>
      <xsd:extension base="DT_DampingBasic">
        <xsd:sequence>

          <!-- Type of fractional damping algorithm -->
          <xsd:element name="fracAlg" minOccurs="0" maxOccurs="1">
            <xsd:simpleType>
              <xsd:restriction base="xsd:token">
                <xsd:enumeration value="gl"/>
                <xsd:enumeration value="blank"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>

          <!-- Number of past time-steps for fractional damping -->
          <xsd:element name="fracMemory" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>

          <!-- Type of interpolation -->
          <xsd:element name="interpolation" minOccurs="0" maxOccurs="1">
            <xsd:simpleType>
              <xsd:restriction base="xsd:token">
                <xsd:enumeration value="no"/>
                <xsd:enumeration value="lin1pt"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>

          <!-- order of the fractional derivative -->
          <xsd:element name="fracDeriv" type="xsd:double" minOccurs="0" maxOccurs="1"/>

          <!-- Elasticity Modulus -->
          <xsd:element name="ElastModule" type="xsd:double" minOccurs="0" maxOccurs="1"/>

          <!-- History Time to remember -->
          <xsd:element name="timeSlot" type="xsd:double" minOccurs="0" maxOccurs="1"/>

          <!-- fractional derivative model -->
          <xsd:element name="model" minOccurs="0" maxOccurs="1">
            <xsd:simpleType>
              <xsd:restriction base="xsd:token">
                <xsd:enumeration value="3param"/>
                <xsd:enumeration value="KelvinVoigt"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <!-- ******************************************************************* -->
  <!--   Definition of BK1 softening -->
  <!-- ******************************************************************* -->

  <!-- Definition of BK1 softening type -->
  <xsd:complexType name="DT_MechSofteningBK1">
    <xsd:complexContent>
      <xsd:extension base="DT_DampingBasic"> </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition of SR1 softening -->
  <!-- ******************************************************************* -->

  <!-- Definition of SR1 softening type -->
  <xsd:complexType name="DT_MechSofteningSR1">
    <xsd:complexContent>
      <xsd:extension base="DT_DampingBasic"> </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition of ICModesTW softening -->
  <!-- ******************************************************************* -->

  <!-- Definition of ICModesTW softening type -->
  <xsd:complexType name="DT_MechSofteningIcModes">
    <xsd:complexContent>
      <xsd:extension base="DT_DampingBasic"> </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition of the mechanic unknown types -->
  <!-- ******************************************************************* -->
  <xsd:simpleType name="DT_MechUnknownType">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="mechDisplacement"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- ******************************************************************* -->
  <!--   Definition of enumeration type describing the degrees of freedom  -->
  <!-- ******************************************************************* -->

  <xsd:simpleType name="DT_MechDOF">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="x"/>
      <xsd:enumeration value="y"/>
      <xsd:enumeration value="z"/>
      <xsd:enumeration value="tx"/>
      <xsd:enumeration value="ty"/>
      <xsd:enumeration value="tz"/>
      <xsd:enumeration value="r"/>
      <xsd:enumeration value="phi"/>
    </xsd:restriction>
  </xsd:simpleType>


  <!-- ******************************************************************* -->
  <!--   Definition of the boundary condition types for mechanic -->
  <!-- ******************************************************************* -->

  <!-- Element type for homogeneous Dirichlet boundary conditions -->
  <!-- We derive it by extending the base type -->
  <xsd:complexType name="DT_MechHD">
    <xsd:complexContent>
      <xsd:extension base="DT_BCBasic">
        <xsd:attribute name="name" type="xsd:token" use="required"/>
        <xsd:attribute name="dof" type="DT_MechDOF" use="required"/>
        <xsd:attribute name="quantity" default="mechDisplacement" type="DT_MechUnknownType"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- Element type for inhomogeneous Dirichlet boundary conditions -->
  <!-- We derive it by extending the homogeneous case -->
  <xsd:complexType name="DT_MechID">
    <xsd:complexContent>
      <xsd:extension base="DT_MechHD">
        <xsd:attribute name="value" type="xsd:token" use="required"/>
        <xsd:attribute name="phase" type="xsd:token" use="optional" default="0.0"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- Element type for concentrated mechanical elements -->
  <!-- We derive it by extending the base type -->
  <xsd:complexType name="DT_MechConcElem">
    <xsd:complexContent>
      <xsd:extension base="DT_BCBasic">
        <xsd:attribute name="name" type="xsd:token" use="required"/>
        <xsd:attribute name="dof" type="DT_MechDOF" use="required"/>
        <xsd:attribute name="massValue" type="xsd:token" default="0.0"/>
        <xsd:attribute name="dampingValue" type="xsd:token" default="0.0"/>
        <xsd:attribute name="stiffnessValue" type="xsd:token" default="0.0"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <!-- Element type for constraint condition -->
  <!-- We derive it by extending the base type -->
  <xsd:complexType name="DT_MechCS">
    <xsd:complexContent>
      <xsd:extension base="DT_BCBasic">
        <xsd:attribute name="name" type="xsd:token" use="required"/>
        <xsd:attribute name="quantity" default="mechDisplacement" type="DT_MechUnknownType"/>
        <xsd:attribute name="masterDof" type="DT_MechDOF" use="required"/>
        <xsd:attribute name="slaveDof" type="DT_MechDOF" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- Element type for specifying absorbing boundary conditions -->
  <!-- Identical to that of acoustic case -->
  <!--
  <xsd:complexType name="DT_AbsorbingBC">
    <xsd:complexContent>
      <xsd:extension base="DT_AcousticHD">
       <xsd:attribute name="volumeRegion" type="xsd:token" use="required"/>     
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  -->
  <!-- ******************************************************************* -->
  <!--   Definition of syntax for specifying output quantities of CFS -->
  <!-- ******************************************************************* -->

  <!-- Definition of nodal result types of mechanic PDE -->
  <xsd:simpleType name="DT_MechNodeResult">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="mechDisplacement"/>
      <xsd:enumeration value="mechVelocity"/>
      <xsd:enumeration value="mechAcceleration"/>
      <xsd:enumeration value="mechRhsLoad"/>
      <xsd:enumeration value="lagrangeMultiplier"/>
      <xsd:enumeration value="mechShape"/>
      <xsd:enumeration value="optResult_1"/>      
      <xsd:enumeration value="optResult_2"/>      
      <xsd:enumeration value="optResult_3"/>                  
      <xsd:enumeration value="optResult_4"/>
      <xsd:enumeration value="optResult_5"/>
      <xsd:enumeration value="optResult_6"/>
      <xsd:enumeration value="optResult_7"/>
      <xsd:enumeration value="optResult_8"/>
      <xsd:enumeration value="optResult_9"/>
      <xsd:enumeration value="optResult_10"/>
      <xsd:enumeration value="optResult_11"/>
      <xsd:enumeration value="optResult_12"/>
      <xsd:enumeration value="optResult_13"/>
      <xsd:enumeration value="optResult_14"/>
      <xsd:enumeration value="optResult_15"/>
      <xsd:enumeration value="optResult_16"/>
      <xsd:enumeration value="optResult_17"/>
      <xsd:enumeration value="optResult_18"/>
      <xsd:enumeration value="optResult_19"/>
      <xsd:enumeration value="optResult_20"/>
      <xsd:enumeration value="optResult_21"/>
      <xsd:enumeration value="optResult_22"/>
      <xsd:enumeration value="optResult_23"/>
      <xsd:enumeration value="optResult_24"/>
      <xsd:enumeration value="optResult_25"/>
      <xsd:enumeration value="optResult_26"/>
      <xsd:enumeration value="optResult_27"/>
      <xsd:enumeration value="optResult_28"/>
      <xsd:enumeration value="optResult_29"/>
      <xsd:enumeration value="optResult_30"/>
      <xsd:enumeration value="optResult_31"/>
      <xsd:enumeration value="optResult_32"/>
      <xsd:enumeration value="optResult_33"/>
      <xsd:enumeration value="optResult_34"/>
      <xsd:enumeration value="optResult_35"/>
      <xsd:enumeration value="optResult_36"/>
      <xsd:enumeration value="optResult_37"/>
      <xsd:enumeration value="optResult_38"/>
      <xsd:enumeration value="optResult_39"/>
      <xsd:enumeration value="optResult_40"/>
      <xsd:enumeration value="optResult_41"/>
      <xsd:enumeration value="optResult_42"/>
      <xsd:enumeration value="optResult_43"/>
      <xsd:enumeration value="optResult_44"/>
      <xsd:enumeration value="optResult_45"/>
      <xsd:enumeration value="optResult_46"/>
      <xsd:enumeration value="optResult_47"/>
      <xsd:enumeration value="optResult_48"/>
      <xsd:enumeration value="optResult_49"/>
      <xsd:enumeration value="optResult_50"/>
      <xsd:enumeration value="optResult_51"/>
      <xsd:enumeration value="optResult_52"/>
      <xsd:enumeration value="optResult_53"/>
      <xsd:enumeration value="optResult_54"/>
      <xsd:enumeration value="optResult_55"/>
      <xsd:enumeration value="optResult_56"/>
      <xsd:enumeration value="optResult_57"/>
      <xsd:enumeration value="optResult_58"/>
      <xsd:enumeration value="optResult_59"/>
      <xsd:enumeration value="optResult_60"/>
      <xsd:enumeration value="optResult_61"/>
      <xsd:enumeration value="optResult_62"/>
      <xsd:enumeration value="optResult_63"/>
      <xsd:enumeration value="optResult_64"/>
      <xsd:enumeration value="optResult_65"/> 
      <xsd:enumeration value="optResult_66"/>                   
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Definition of element result types of mechanic PDE -->
  <xsd:simpleType name="DT_MechElemResult">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="mechStrain"/>
      <xsd:enumeration value="mechThermalStrain"/>
      <xsd:enumeration value="mechStress"/>      
      <xsd:enumeration value="mechThermalStress"/>      
      <xsd:enumeration value="mechPrincipalStressMin"/>
      <xsd:enumeration value="mechPrincipalStressMinScalar"/>
      <xsd:enumeration value="mechPrincipalStressMax"/>
      <xsd:enumeration value="mechPrincipalStressMaxScalar"/>
      <xsd:enumeration value="mechPrincipalStressMed"/>
      <xsd:enumeration value="mechPrincipalStressMedScalar"/>
      <xsd:enumeration value="mechPrincipalStrainMin"/>
      <xsd:enumeration value="mechPrincipalStrainMinScalar"/>
      <xsd:enumeration value="mechPrincipalStrainMax"/>
      <xsd:enumeration value="mechPrincipalStrainMaxScalar"/>
      <xsd:enumeration value="mechPrincipalStrainMed"/>
      <xsd:enumeration value="mechPrincipalStrainMedScalar"/>

      <xsd:enumeration value="mechStructIntensity"/>
      <xsd:enumeration value="vonMisesStress"/>
      <xsd:enumeration value="vonMisesStrain"/>
      <xsd:enumeration value="mechKinEnergyDensity"/>
      <xsd:enumeration value="mechDeformEnergyDensity"/>
      <xsd:enumeration value="mechTotalEnergyDensity"/>
      <xsd:enumeration value="mechNormalStructIntensity"/>
      
      <!-- dyadic hermitian product of the strain vectors -->
      <xsd:enumeration value="mechDyadicStrain"/>
      
      <!-- scalar product of the displacement vectors. Or the squared displacement norm -->
      <xsd:enumeration value="mechQuadDisplacement"/>
      
      <!-- non-physical design variable for simp topology optimization --> 
      <xsd:enumeration value="mechPseudoDensity"/>
      <!-- physical application of design variable in the simulation -->
      <xsd:enumeration value="physicalPseudoDensity"/>
      <!-- For parametrized or free material optimization the local tensor trace -->
      <xsd:enumeration value="mechTensorTrace"/>
      <!-- For parametrized or free material optimization the complete local tensor in Voigt notation -->
      <xsd:enumeration value="mechTensor"/>
      <!-- the local tensor in Hill Mandel notation -->
      <xsd:enumeration value="mechTensorHillMandel"/>
      <!-- the local tensor in Hill Mandel notation -->
      <xsd:enumeration value="mechElemVol"/>
      <xsd:enumeration value="mechElemPorosity"/>
      <xsd:enumeration value="optResult_1"/>      
      <xsd:enumeration value="optResult_2"/>      
      <xsd:enumeration value="optResult_3"/>                  
      <xsd:enumeration value="optResult_4"/>
      <xsd:enumeration value="optResult_5"/>
      <xsd:enumeration value="optResult_6"/>
      <xsd:enumeration value="optResult_7"/>
      <xsd:enumeration value="optResult_8"/>
      <xsd:enumeration value="optResult_9"/>
      <xsd:enumeration value="optResult_10"/>
      <xsd:enumeration value="optResult_11"/>
      <xsd:enumeration value="optResult_12"/>   
      <xsd:enumeration value="optResult_13"/>      
      <xsd:enumeration value="optResult_14"/>      
      <xsd:enumeration value="optResult_15"/>      
      <xsd:enumeration value="optResult_16"/>      
      <xsd:enumeration value="optResult_17"/>      
      <xsd:enumeration value="optResult_18"/>      
      <xsd:enumeration value="optResult_19"/>      
      <xsd:enumeration value="optResult_20"/>      
      <xsd:enumeration value="optResult_21"/>      
      <xsd:enumeration value="optResult_22"/>      
      <xsd:enumeration value="optResult_23"/>      
      <xsd:enumeration value="optResult_24"/>      
      <xsd:enumeration value="optResult_25"/>
      <xsd:enumeration value="optResult_26"/>      
      <xsd:enumeration value="optResult_27"/>
      <xsd:enumeration value="optResult_28"/>
      <xsd:enumeration value="optResult_29"/>
      <xsd:enumeration value="optResult_30"/>
      <xsd:enumeration value="optResult_31"/>
      <xsd:enumeration value="optResult_32"/>
      <xsd:enumeration value="optResult_33"/>
      <xsd:enumeration value="optResult_34"/>
      <xsd:enumeration value="optResult_35"/>
      <xsd:enumeration value="optResult_36"/>
      <xsd:enumeration value="optResult_37"/>
      <xsd:enumeration value="optResult_38"/>
      <xsd:enumeration value="optResult_39"/>
      <xsd:enumeration value="optResult_40"/>
      <xsd:enumeration value="optResult_41"/>
      <xsd:enumeration value="optResult_42"/>
      <xsd:enumeration value="optResult_43"/>
      <xsd:enumeration value="optResult_44"/>
      <xsd:enumeration value="optResult_45"/>
      <xsd:enumeration value="optResult_46"/>
      <xsd:enumeration value="optResult_47"/>
      <xsd:enumeration value="optResult_48"/>
      <xsd:enumeration value="optResult_49"/>
      <xsd:enumeration value="optResult_50"/>
      <xsd:enumeration value="optResult_51"/>
      <xsd:enumeration value="optResult_52"/>
      <xsd:enumeration value="optResult_53"/>
      <xsd:enumeration value="optResult_54"/>
      <xsd:enumeration value="optResult_55"/>
      <xsd:enumeration value="optResult_56"/>
      <xsd:enumeration value="optResult_57"/>
      <xsd:enumeration value="optResult_58"/>
      <xsd:enumeration value="optResult_59"/>
      <xsd:enumeration value="optResult_60"/>
      <xsd:enumeration value="optResult_61"/>
      <xsd:enumeration value="optResult_62"/>
      <xsd:enumeration value="optResult_63"/>
      <xsd:enumeration value="optResult_64"/>
      <xsd:enumeration value="optResult_65"/>
      <xsd:enumeration value="optResult_66"/>
      
      <!-- mechVelocity but only defined on elements to be able to read it with ReadUserVariables() -->
      <xsd:enumeration value="mechVelocityElem"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Definition of surface element result types of mechanic PDE -->
  <xsd:simpleType name="DT_MechSurfElemResult">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="mechNormalStructIntensity"/>
      <xsd:enumeration value="mechNormalStress"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Definition of field variables (union of nodal and element results) -->
  <xsd:simpleType name="DT_MechFieldResult">
    <xsd:union memberTypes="DT_MechNodeResult DT_MechElemResult"/>
  </xsd:simpleType>

  <!-- Definition of surface region result types of mechanic PDE -->
  <xsd:simpleType name="DT_MechRegionResult">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="mechKinEnergy"/>
      <xsd:enumeration value="mechDeformEnergy"/>
      <xsd:enumeration value="mechTotalEnergy"/>
      <xsd:enumeration value="mechDyadicStrainSum"/>
      <xsd:enumeration value="mechQuadDisplacementSum"/>
      <xsd:enumeration value="homogenizedTensor"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Definition of region result types of mechanic PDE -->
  <xsd:simpleType name="DT_MechSurfRegionResult">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="mechDisplacedSurfVolume"/>
      <xsd:enumeration value="mechPower"/>
      <xsd:enumeration value="mechForce"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Global type for specifying desired electrostatic output quantities -->
  <xsd:complexType name="DT_MechStoreResults">
    <xsd:sequence>
      <xsd:choice maxOccurs="unbounded">

        <!-- Nodal result definition -->
        <xsd:element name="nodeResult" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_NodeResult">
                <xsd:attribute name="type" type="DT_MechNodeResult" use="required"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>

        <!-- Element result definition -->
        <xsd:element name="elemResult" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_ElemResult">
                <xsd:attribute name="type" type="DT_MechElemResult" use="required"/>
                <!-- Only for (von Mises) stress and strain. Divides value by element volume. -->
                <xsd:attribute name="stress_strain_density" type="xsd:boolean" use="optional"
                  default="false"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>


        <!-- Surface Element result definition -->
        <xsd:element name="surfElemResult" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_SurfElemResult">
                <xsd:attribute name="type" type="DT_MechSurfElemResult" use="required"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>

        <!-- Region result definition -->
        <xsd:element name="regionResult" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_RegionResult">
                <xsd:attribute name="type" type="DT_MechRegionResult" use="required"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>
        
        <!-- averaged Region result definition -->
        <xsd:element name="regionAverageResult" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_RegionAverageResult">
                <xsd:attribute name="type" type="DT_MechFieldResult" use="required"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>

        <!-- Surface region result definition -->
        <xsd:element name="surfRegionResult" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_SurfRegionResult">
                <xsd:attribute name="type" type="DT_MechSurfRegionResult" use="required"/>
                <xsd:attribute name="dof" type="DT_MechDOF"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>

        <!-- SensorArrayResults -->
        <xsd:element name="sensorArray" minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="DT_SensorArrayResult">
                <xsd:attribute name="type" type="DT_MechFieldResult"/>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>

      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>

  <!-- ******************************************************************* -->
  <!--   Definition for softening                                          -->
  <!-- ******************************************************************* -->

  <xsd:complexType name="DT_MechSoftening">
    <xsd:attribute name="type" use="optional" default="no">
      <xsd:simpleType>
        <xsd:restriction base="xsd:token">
          <xsd:enumeration value="no"/>
          <xsd:enumeration value="BK1"/>
          <xsd:enumeration value="SRI"/>
          <xsd:enumeration value="ICModesTW"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>


  <!-- ******************************************************************* -->
  <!--   Definition of data type for reference Loading -->
  <!-- ******************************************************************* -->
  <xsd:complexType name="DT_ReferenceLoad">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="referenceStress">
          <xsd:complexType>
            <xsd:attribute name="sequenceStep" type="xsd:unsignedInt" default="0"/>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="referenceDisplacement">
          <xsd:complexType>
            <xsd:attribute name="sequenceStep" type="xsd:unsignedInt" default="0"/>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="region" type="xsd:token" use="required"/>
  </xsd:complexType>
  
  
  <!-- ******************************************************************* -->
  <!--   Definition of data type for prestressing -->
  <!-- ******************************************************************* -->
  <xsd:complexType name="DT_MechPreStress">
    <xsd:choice>
      <xsd:element name="prescribedLHS">
        <xsd:complexType>
          <xsd:attribute name="value" use="required">
            <xsd:simpleType>
              <xsd:restriction base="DT_DoubleList">
                <xsd:maxLength value="6"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="computeLHS">
        <xsd:complexType>
          <xsd:attribute name="sequenceStep" use="optional" type="xsd:unsignedInt" default="0"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="region" type="xsd:token"/>
  </xsd:complexType>


  <!-- By 3, respectively 6 teststrains the homogenizied tensor can be computed.
     This is implemented within optimization but can be also done manually, where
     the homogenized tensor needs to be calculated offline. -->
  <xsd:complexType name="DT_MechTestStrain">
    <xsd:attribute name="strain" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="x"/>
          <xsd:enumeration value="y"/>
          <xsd:enumeration value="z"/>
          <xsd:enumeration value="yz"/>
          <xsd:enumeration value="xz"/>
          <xsd:enumeration value="xy"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="DT_elecStrain">
    <xsd:sequence>
      <xsd:element name="excitation" type="DT_BcInhomVector">
        <xsd:annotation>
          <xsd:documentation>Excitation quantiy</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="direction" type="DT_BcInhomVector">
        <xsd:annotation>
          <xsd:documentation>Currently dummy function.
Idea is to use this to rotate a material tensor in this direction. 

Example: Electric field and polarization
Gets excited with a electric field, but polarization not same direction and material tensor depends on polarization</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="scaling">
        <xsd:annotation>
          <xsd:documentation>Used for scaling the excitation</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" name="dependency" type="DT_BcInhomVector"> </xsd:element>
            <xsd:element name="formulation">
              <xsd:complexType>
                <xsd:choice>
                  <xsd:element name="linear">
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element default="0" name="factor" type="xsd:float"/>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:choice>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string"/>
    <xsd:attribute name="region" type="xsd:string"/>
  </xsd:complexType>

</xsd:schema>
